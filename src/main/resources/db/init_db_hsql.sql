DROP TABLE votes
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP TABLE roles
IF EXISTS;
DROP TABLE menu_sets
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE lunch_menu
IF EXISTS;
DROP TABLE dishes
IF EXISTS;


CREATE TABLE roles
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  CONSTRAINT uc_roles_name UNIQUE (name)

);

CREATE TABLE users
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  name     VARCHAR(255) NOT NULL,
  email    VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  roles_id INTEGER,
  CONSTRAINT uc_users_email UNIQUE (email),
  FOREIGN KEY (roles_id) REFERENCES roles (id)
);

CREATE TABLE lunch_menu
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  name    VARCHAR(255) NOT NULL
);

CREATE TABLE restaurants
(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  lunch_menu_id INTEGER          NOT NULL,
  name          VARCHAR(255)      NOT NULL,
  rating        INTEGER DEFAULT 0 NOT NULL,
  FOREIGN KEY (lunch_menu_id) REFERENCES lunch_menu (id)
);

CREATE TABLE dishes
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  price   INTEGER      NOT NULL,
  CONSTRAINT uc_name UNIQUE (name)
);

CREATE TABLE menu_sets
(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  lunch_menu_id INTEGER NOT NULL,
  dish_id INTEGER NOT NULL,
  day           INTEGER  NOT NULL,
  FOREIGN KEY (lunch_menu_id) REFERENCES lunch_menu (id)
    ON DELETE CASCADE,
  FOREIGN KEY (dish_id) REFERENCES dishes (id),
  CONSTRAINT uc_lunch_menu_dish_day UNIQUE (lunch_menu_id, dish_id, day)
);

CREATE TABLE votes
(
  id        INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  user_id   INTEGER                NOT NULL,
  restaurant_id INTEGER NOT NULL,
  up      BIT                 NOT NULL,
  date DATE NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants(id)
    ON DELETE CASCADE,
  CONSTRAINT uc_user_restaurant_date UNIQUE (user_id, restaurant_id, date)
);